# Generated by Django 2.2.13 on 2021-01-21 11:02

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('defenition', '0001_initial'),
        ('company', '0002_auto_20210121_1102'),
    ]

    operations = [
        migrations.CreateModel(
            name='Custom_Python_Rule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('help_text', models.TextField(default='\n    You can define a custom deduction/addition rule here using python code.\n    You have the following variables available to use:\n    * basic: this is the basic salary of the employee.\n    * variable: this is the variable salary of the employee.\n    * d_days: these are the number of days the employee should be deducted this month\n    because of his/her absence or any other Attendance rules that implies deduction days.\n    * grs:(without `o`) gross salary equals to basic salary + variable salary + any other added allowances/bonus/incentive etc..\n    After calculating your equation, you have to store the required amount to be added/deducted in a variable named amount.\n    If the value of the amount variable is positive, the amount will be added to the net salary of the employee.\n    And if it is negative, it will be deducted.\n    Example:\n    if basic <= 5000:\n    ____extra_deduction = -250\n    else:\n    ____extra_deduction = -500\n    amount = extra_deduction\n    Make Sure that your code is properly indented using 4 spaces\n    ', verbose_name='Help Text')),
                ('rule_definition', models.TextField(verbose_name='Rule Definition')),
                ('taxable', models.BooleanField(default=False, verbose_name='Taxable')),
            ],
        ),
        migrations.CreateModel(
            name='Element',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('element_name', models.CharField(max_length=100, verbose_name='Pay Name')),
                ('db_name', models.CharField(blank=True, max_length=4, null=True, verbose_name='db Name')),
                ('code', models.CharField(blank=True, max_length=50, null=True, verbose_name='code')),
                ('element_type', models.CharField(choices=[('payslip based', 'Payslip based'), ('global value', 'Global value'), ('formula', 'Formula')], max_length=100)),
                ('amount_type', models.CharField(blank=True, choices=[('fixed amount', 'Amount'), ('percentage', 'Percentage'), ('days', 'Days'), ('hrs', 'Hrs'), ('months', 'Months')], max_length=100, null=True)),
                ('fixed_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Amount')),
                ('element_formula', models.TextField(blank=True, max_length=255, null=True, verbose_name='Formula')),
                ('appears_on_payslip', models.BooleanField(default=True, verbose_name='Appears on payslip')),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('tax_flag', models.BooleanField(default=False, verbose_name='Tax Flag')),
                ('scheduled_pay', models.CharField(choices=[('yearly', 'Yearly'), ('monthly', 'Monthly'), ('weekly', 'Weekly')], max_length=100)),
                ('start_date', models.DateField(default=datetime.date.today, verbose_name='Start Date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End Date')),
                ('creation_date', models.DateField(auto_now_add=True)),
                ('last_update_date', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Element_Batch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_name', models.CharField(max_length=255, verbose_name='Batch Name')),
                ('start_date', models.DateField(default=datetime.date.today, verbose_name='Start Date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End Date')),
                ('creation_date', models.DateField(auto_now=True)),
                ('last_update_date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Element_Batch_Master',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(default=datetime.date.today, verbose_name='Start Date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End Date')),
                ('creation_date', models.DateField(auto_now=True)),
                ('last_update_date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='SalaryStructure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('structure_name', models.CharField(max_length=255, verbose_name='Structure Name')),
                ('start_date', models.DateField(default=datetime.date.today, verbose_name='Start Date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End Date')),
                ('creation_date', models.DateField(auto_now_add=True)),
                ('last_update_date', models.DateField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='salary_structure_created_by', to=settings.AUTH_USER_MODEL)),
                ('enterprise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enterprise_salary_structures', to='company.Enterprise', verbose_name='Enterprise Name')),
                ('last_update_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='salary_structure_last_update_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StructureElementLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(default=datetime.date.today, verbose_name='Start Date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End Date')),
                ('creation_date', models.DateField(auto_now_add=True)),
                ('last_update_date', models.DateField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='link_is_created_by', to=settings.AUTH_USER_MODEL)),
                ('element', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='structure_link', to='element_definition.Element')),
                ('last_update_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='link_is_last_update_by', to=settings.AUTH_USER_MODEL)),
                ('salary_structure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='element_link', to='element_definition.SalaryStructure')),
            ],
        ),
        migrations.CreateModel(
            name='ElementHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('element_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Pay Name')),
                ('code', models.CharField(blank=True, max_length=50, null=True, verbose_name='code')),
                ('element_type', models.CharField(blank=True, choices=[('payslip based', 'Payslip based'), ('global value', 'Global value'), ('formula', 'Formula')], max_length=100, null=True)),
                ('amount_type', models.CharField(blank=True, choices=[('fixed amount', 'Amount'), ('percentage', 'Percentage'), ('days', 'Days'), ('hrs', 'Hrs'), ('months', 'Months')], max_length=100, null=True)),
                ('fixed_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Amount')),
                ('element_formula', models.TextField(blank=True, max_length=255, null=True, verbose_name='Formula')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('appears_on_payslip', models.BooleanField(blank=True, default=True, null=True, verbose_name='Appears on payslip')),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('tax_flag', models.BooleanField(blank=True, default=False, null=True, verbose_name='Tax Flag')),
                ('scheduled_pay', models.CharField(blank=True, choices=[('yearly', 'Yearly'), ('monthly', 'Monthly'), ('weekly', 'Weekly')], max_length=100, null=True)),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End Date')),
                ('creation_date', models.DateField(blank=True, null=True)),
                ('last_update_date', models.DateField(blank=True, null=True)),
                ('classification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='defenition.LookupDet', verbose_name='classification')),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='element_history_is_created_by', to=settings.AUTH_USER_MODEL)),
                ('enterprise', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='enterprise_salary_elements_history', to='company.Enterprise', verbose_name='Enterprise Name')),
                ('last_update_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='element_history_is_last_update_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Element_Master',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('element_name', models.CharField(max_length=100, verbose_name='Pay Name')),
                ('db_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='db Name')),
                ('basic_flag', models.BooleanField(default=False)),
                ('effective_date', models.DateField(blank=True, default=datetime.date.today, null=True, verbose_name='Effective Date')),
                ('retro_flag', models.BooleanField(verbose_name='Retro Flag')),
                ('tax_flag', models.BooleanField(verbose_name='Tax Flag')),
                ('fixed_amount', models.IntegerField(default=0, verbose_name='Fixed Amount')),
                ('element_formula', models.TextField(blank=True, max_length=255, null=True, verbose_name='Formula')),
                ('start_date', models.DateField(default=datetime.date.today, verbose_name='Start Date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End Date')),
                ('creation_date', models.DateField(auto_now=True)),
                ('last_update_date', models.DateField(auto_now_add=True)),
                ('classification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lookup_classification', to='defenition.LookupDet', verbose_name='classification')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='element_master_created_by', to=settings.AUTH_USER_MODEL)),
                ('element_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lookup_element', to='defenition.LookupDet', verbose_name='Pay Type')),
                ('enterprise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enterprise_element_master', to='company.Enterprise', verbose_name='Enterprise Name')),
                ('last_update_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='element_master_last_update_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Element_Link',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('standard_flag', models.BooleanField(blank=True, default=False, verbose_name='Standard Flag')),
                ('link_to_all_payroll_flag', models.BooleanField(blank=True, default=False, verbose_name='Link All')),
                ('start_date', models.DateField(default=datetime.date.today, verbose_name='Start Date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End Date')),
                ('creation_date', models.DateField(auto_now=True)),
                ('last_update_date', models.DateField(auto_now_add=True)),
                ('batch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='element_definition.Element_Batch', verbose_name='Batch Name')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='element_link_created_by', to=settings.AUTH_USER_MODEL)),
                ('element_dept_id_fk', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='company.Department', verbose_name='Department')),
                ('element_grade_fk', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='company.Grade', verbose_name='Grade')),
                ('element_job_id_fk', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='company.Job', verbose_name='Job')),
                ('element_master_fk', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='element_link_to_master', to='element_definition.Element_Master', verbose_name='Pay Name')),
                ('element_position_id_fk', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='company.Position', verbose_name='Position')),
            ],
        ),
    ]
